

@page "/"
@using GuieMe.Domain.Helpers;

@inject IJSRuntime JSRuntime

<button @onclick="GerarESalvarPdf"> Abrir PDF </button>

<br />
<br />
<br />


<button @onclick="GerarESalvarPdf"> mostrar caminho </button>
<br />

<label> @Constants.rotaPdf </label>
<label> @Constants.erro </label>







@code {
    public void GerarESalvarPdf()
    {
        PdfService service = new PdfService();
        service.AbrirPDF();
    }

    //public void OnOpenPdfButtonClicked()
    //{
    //    PdfService service = new PdfService();
    //    service.OpenPdf();
    //}


    public async Task GerarEAbrirPdf()
    {
        PdfService service = new PdfService();
        var pdfBytes = service.CriarPdf();

        //GERAR URL BLOB
        // Converter o array de bytes para um ArrayBuffer
        var arrayBuffer = pdfBytes.ToUint8Array();

        // Chamar a função JavaScript para iniciar o download
        await JSRuntime.InvokeVoidAsync("downloadFile", arrayBuffer, "arquivo.pdf", "application/pdf"); 


        ///// CAMINHO DENTRO DO PROJETO
        var pdfFilePath = Path.Combine(AppContext.BaseDirectory, "pdfs", "arquivo.pdf");

        // Verificar se o arquivo PDF existe
        if (File.Exists(pdfFilePath))
        {
            // Abrir o arquivo PDF no navegador padrão
            await Launcher.OpenAsync(new OpenFileRequest
                {
                    File = new ReadOnlyFile(pdfFilePath)
                });
        }


        ///// CAMINHO PADRÃO
        //var tempFilePath = Path.Combine(Environment.GetFolderPath(Environment.SpecialFolder.LocalApplicationData), "arquivo.pdf");

        //// Salvar o arquivo PDF temporário no sistema de arquivos
        //File.WriteAllBytes(tempFilePath, pdfBytes);

        //// Abrir o arquivo PDF no navegador padrão
        //await Launcher.OpenAsync(new OpenFileRequest
        //    {
        //        File = new ReadOnlyFile(tempFilePath)
        //    });
    }

    [JSInvokable]
    public static void AbrirNavegador(string url)
    {
        // Inicia o navegador padrão com a URL especificada
        Process.Start(new ProcessStartInfo
            {
                FileName = url,
                UseShellExecute = true
            });
    }
}