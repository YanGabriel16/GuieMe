@page "/objetivos"

@using GuieMe.Domain.Models;
@using GuieMe.Views.Components
@using GuieMe.Domain.Interfaces;

@inject IObjetivoService ObjetivoService;
@inject IUsuarioService UsuarioService;

<div class="">
    <div class="rz-p-xl-12 rz-text-align-end rz-mb-2 rz-mr-2">
        <AppMenu_component></AppMenu_component>
    </div>

    <div class="rz-p-xl-12 rz-text-align-center rz-mb-2">
        <h2>Objetivos</h2>
    </div>

    @if (objetivos != null)
    {
        <div class="rz-p-xl-12 rz-text-align-center rz-mb-2">
            <RadzenTimeline Orientation="Orientation.Vertical" LinePosition="LinePosition.Center" Class="rz-m-4">
                <Items>
                    @foreach (var objetivo in objetivos)
                    {
                        var progresso = ObjetivoEstaConcluido(objetivo.Id) ? 1 : 0;
                        PointStyle point() => progresso == 1 ? PointStyle.Primary : PointStyle.Base;

                        <RadzenTimelineItem PointStyle="@point()">
                            <LabelContent>
                                <RadzenText TextStyle="TextStyle.Subtitle2" Class="rz-m-0 rz-color-primary">@objetivo.Nome</RadzenText>
                            </LabelContent>
                            <ChildContent>
                                @objetivo.Descricao
                            </ChildContent>
                        </RadzenTimelineItem>
                    }
                </Items>
            </RadzenTimeline>
        </div>
    }
</div>

@code {
    List<Objetivo> objetivos;
    Usuario usuarioLogado;
    int quantidadeObjetivos;
    int quantidadeObjetivosConcluidos;
    bool todosObjetivosConcluidos;

    protected override async Task OnInitializedAsync()
    {
        usuarioLogado = await UsuarioService.GetUsuario();
        objetivos = ObjetivoService.GetObjetivos(usuarioLogado.Curso?.Id);
        quantidadeObjetivos = objetivos.Count;
        quantidadeObjetivosConcluidos = usuarioLogado.ObjetivosConcluidos.Count;
        todosObjetivosConcluidos = quantidadeObjetivos == quantidadeObjetivosConcluidos;
    }

    string iconTodosObjetivosConcluidos() 
        => todosObjetivosConcluidos ? "assignment_turned_in" : "assignment_late";

    string progressoObjetivosConcluidos()
        => $"{quantidadeObjetivosConcluidos} / {quantidadeObjetivos}";

    public bool ObjetivoEstaConcluido(int objetivoId)
    {
        return usuarioLogado.ObjetivosConcluidos.Any(x => x.Id == objetivoId);
    }
}
