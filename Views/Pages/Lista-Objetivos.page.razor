@page "/objetivos"

@using GuieMe.Domain.Models;
@using GuieMe.Views.Components
@using GuieMe.Domain.Interfaces;

@inject IObjetivoService ObjetivoService;
@inject IUsuarioService UsuarioService;

<div class="header">
    <div class="rz-p-xl-12 rz-text-align-end rz-mb-2 rz-mr-2">
        <AppMenu_component></AppMenu_component>
    </div>

    <div class="rz-p-xl-12 rz-text-align-center rz-mb-2">
        <h2 style="color: #FFF200;">Objetivos</h2>
    </div>
</div>
<div>
    @if (objetivos != null)
    {
        <div class="rz-p-xl-12 rz-text-align-center rz-mb-2">
            <RadzenStack Gap="1rem" Class="rz-my-10 rz-mx-auto" Style="width: 90%;">
                <RadzenLabel Text="@progressoObjetivosConcluidos()" style="color: black;" class="align-text-center" />
                <RadzenProgressBar ProgressBarStyle="ProgressBarStyle.Success"
                                   Value="@quantidadeObjetivosConcluidos"
                                   Max="@quantidadeObjetivos"
                                   ShowValue="true" />
            </RadzenStack>
            @foreach (var objetivo in objetivos)
            {
                var progresso = ObjetivoEstaConcluido(objetivo.Id) ? 1 : 0;
                PointStyle point() => progresso == 1 ? PointStyle.Primary : PointStyle.Base;
                string icon() => progresso == 1 ? "check" : "more_horiz";
                string mensagem() => progresso == 1 ? "Concluído" : "Em Andamento";

                <RadzenPanel AllowCollapse="false" Class="rz-my-10 rz-mx-auto" Style="width: 90%;">
                    <RadzenTimeline Orientation="Orientation.Vertical" LinePosition="LinePosition.Center"
                                    style="--rz-timeline-line-width: 36px; max-width: 600px; margin: 0 auto;">
                        <Items>
                            <RadzenTimelineItem PointStyle="@point()">
                                <PointContent><RadzenIcon Icon="@icon()" /></PointContent>
                                <LabelContent>
                                    <RadzenText TextStyle="TextStyle.Subtitle2" Class="rz-m-0 rz-color-primary">@objetivo.Nome</RadzenText>
                                </LabelContent>
                                <ChildContent>
                                    @mensagem()
                                </ChildContent>
                            </RadzenTimelineItem>
                        </Items>
                    </RadzenTimeline>
                    <RadzenText Class="rz-m-0">@objetivo.Descricao</RadzenText>
                </RadzenPanel>
            }
        </div>
        <div class="rz-p-xl-12 rz-text-align-center rz-mb-2">
            <RadzenButton Click=@(args => OnClickGerarCertificado()) 
                Text="Gerar Certificado" 
                class="rz-border-radius-10 rz-shadow-10" 
                ButtonStyle="ButtonStyle.Warning" 
                Style="background-color: #263A7F; color: #FFF200;" />
        </div>
    }
</div>

@code {
    List<Objetivo> objetivos;
    Usuario usuarioLogado;
    int quantidadeObjetivos;
    int quantidadeObjetivosConcluidos;
    bool todosObjetivosConcluidos;

    protected override async Task OnInitializedAsync()
    {
        usuarioLogado = await UsuarioService.GetUsuario();
        objetivos = ObjetivoService.GetObjetivos(usuarioLogado.Curso?.Id);
        quantidadeObjetivos = objetivos.Count;
        quantidadeObjetivosConcluidos = usuarioLogado.ObjetivosConcluidos.Count;
        todosObjetivosConcluidos = quantidadeObjetivos == quantidadeObjetivosConcluidos;
    }

    string iconTodosObjetivosConcluidos() 
        => todosObjetivosConcluidos ? "assignment_turned_in" : "assignment_late";

    string progressoObjetivosConcluidos()
        => $"{quantidadeObjetivosConcluidos} / {quantidadeObjetivos}";

    public bool ObjetivoEstaConcluido(int objetivoId)
    {
        return usuarioLogado.ObjetivosConcluidos.Any(x => x.Id == objetivoId);
    }

    public void OnClickGerarCertificado()
    {
        var teste = ObjetivoService.GerarCertificado();
        Console.WriteLine("Certificado gerado => " + teste);
    }
}
